BASEMODE GOALS:

    [x] Look through provided code.
        - Server side code to retrieve data (GET) and like a photo (PUT) have been provided.
        [x] Test these routes in Postman.
        - No need to modify for BASEMODE.
    [x] Setup
        - no database for BASEMODE. All data is stored in an array on the server.
        [x] add a few images to the public/images folder
        [x] modify the server/modules/data.js to include an id, title, description and path for each image.
            - each id should be a unique number (1, 2, 3...)
        [x] install nodemon - already completed
        [x] npm install
        [x] npm run server
        [x] npm run client
    [] BASEMODE
        [x] Create a gallery page to share pictures of things that are important to me.
            [x] decide what to share
        [x] Clicking image will toggle to a description.
        [x] Can click a button to 'like' the image.
            [x] 'likes' will be counted and number of likes displayed.
        [x] Use props to pass values
            [x] App - represents the overall application or site
            [x] GalleryList - represents the gallery of images. By componentizing, we could reuse this component in different applications
            [x] GalleryItem - represents a single image in the gallery with the ability to click the image to toggle between image and description as well as the ability to like an image.
BASEMODE Task List:
    [x] Use axios to retrieve (GET) data from to /gallery and store it in App.jsx
    [x] Create a new component for the GalleryList and pass in the gallery data stored in App via props.
        [x] Iterate (loop over) the list of gallery data.
        [x] Make GalleryItems
    [x] Create a new component called GalleryItems.jsx and pass in the individual gallery item via props.
        [x] Update the GallerList to use this component to display an image.
        [x] Swap the image with the description on click.
            [x] Use conditional rendering.
        [x] Display the number of likes for each item and include a like button.
        [x] When the like button is clicked, use axios to update (PUT) the like count /gallery/like/:id
        [x] Update the gallery each time a like button is clicked.

STRETCH GOALS:
    [] Use Git Branching
    [] Move the data into a database (postgresql)
        [] name your database react_gallery
        [] include a database.sql file documenting your database tables
    [] Add a form (new component) that allows a user to POST a new gallery item
        [] Client side form (use absolute URL for images)
        [] Server side route for posting an image
    [] Ability to delete a gallery item
    [] Add styling with Material-UI https://material-ui.com/
    [] Implement uppy for image upload 

        
        